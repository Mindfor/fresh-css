@import "variables.less";
@import "grid.less";

// Mixins
.blocks {
	.row;
	list-style: none;
	padding: 0;
	
	> * {
		text-align: center;
	}
}

.blocks(@num) {
	&:extend(.blocks all);	
	> * {
		width: percentage(1 / @num);
	}
}

.blocks(@num, @min-width) {
	&:extend(.blocks all);	
	@media (min-width: @min-width) {
		> * {
			width: percentage(1 / @num);
		}
	}
}

.blocks-sm(@num) {
	.blocks(@min, @width-sm);
}

.blocks-md(@num) {
	.blocks(@min, @width-md);
}

.blocks-lg(@num) {
	.blocks(@min, @width-lg);
}

.blocks-xl(@num) {
	.blocks(@min, @width-xl);
}

// Create default blocks in loop
.blocks-loop(@num) when (@num <= @blocks-count) {
	.blocks-@{num} {
		.blocks(@num);
	}
	.blocks-loop(@num + 1);
}

.blocks-loop(@num, @suffix, @min-width) when (@num <= @blocks-count) {
	.blocks-@{suffix}-@{num} {
		.blocks(@num, @min-width);
	}
	.blocks-loop(@num + 1, @suffix, @min-width);
}

.blocks-loop(1);
.blocks-loop(1, sm, @width-sm);
.blocks-loop(1, md, @width-md);
.blocks-loop(1, lg, @width-lg);
.blocks-loop(1, xl, @width-xl);