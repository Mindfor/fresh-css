@import "variables.less";
@import "mixins.less";

// Rows
.row {
	.clearfix();
	.flex-container(row wrap);
}

.row(@spacing) {
	.row;
	margin-left: -@spacing;
	margin-right: -@spacing;
	
	> * {
		padding-left: @spacing;
		padding-right: @spacing;
	}
}

// Column mixins
.col(@num, @total: @grid-columns) {
	width: percentage(@num / @total);
}

.col(@num, @total, @min-width) {
	@media (min-width: @min-width) {
		width: percentage(@num / @total);
	}
}

.col-tablet(@num, @total: @grid-columns) {
	.col(@num, @total, @width-tablet);
}

.col-desktop(@num, @total: @grid-columns) {
	.col(@num, @total, @width-desktop);
}

.col-hd(@num, @total: @grid-columns) {
	.col(@num, @total, @width-hd);
}

// Offset mixins
.col-offset(@num, @total: @grid-columns) {
	margin-left: percentage(@num / @total);
}

.col-offset(@num, @total, @min-width) {
	@media (min-width: @min-width) {
		margin-left: percentage(@num / @total);
	}
}

.col-offset-tablet(@num, @total: @grid-columns) {
	.col-offset(@num, @total, @width-tablet);
}

.col-offset-desktop(@num, @total: @grid-columns) {
	.col-offset(@num, @total, @width-desktop);
}

.col-offset-hd(@num, @total: @grid-columns) {
	.col-offset(@num, @total, @width-hd);
}

// Create default columns in loop
.col-loop(@num) when (@num <= @grid-columns) {
	.col-@{num} {
		.col(@num);
	}
	
	.col-offset-@{num} {
		.col-offset(@num);
	}
	
	.col-loop(@num + 1);
}

.col-loop(@num, @suffix, @min-width) when (@num <= @grid-columns) {
	.col-@{suffix}-@{num} {
		.col(@num, @grid-columns, @min-width);
	}

	.col-offset-@{suffix}-@{num} {
		.col-offset(@num, @grid-columns, @min-width);
	}

	.col-loop(@num + 1, @suffix, @min-width);
}

.col-loop(1);
.col-loop(1, tablet, @width-tablet);
.col-loop(1, desktop, @width-desktop);
.col-loop(1, hd, @width-hd);