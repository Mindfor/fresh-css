.clearfix() {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

.vertical-align() {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}

.gradient(@bgcolor: #fff, @from: #fff, @to: #000) {
	background-color: @bgcolor;
	filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{from}', endColorstr='@{to}',GradientType=0)";
	background-image: linear-gradient(top, @from 0%, @to 100%);
}

.justify-content(@value) {
	-webkit-justify-content: @value;
	-moz-justify-content: @value;
	justify-content: @value;
}

.box-shadow(@shadow) {
	-webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
		-moz-box-shadow: @shadow;
		box-shadow: @shadow;
}

.box-shadow(@shadow, @important) when (@important = true) {
	-webkit-box-shadow: @shadow !important; // iOS <4.3 & Android <4.1
	-moz-box-shadow: @shadow  !important;
		box-shadow: @shadow  !important;
}

// Border-radius
.border-top-radius(@radius) {
	border-top-right-radius: @radius;
	border-top-left-radius: @radius;
}
.border-right-radius(@radius) {
	border-bottom-right-radius: @radius;
	border-top-right-radius: @radius;
}
.border-bottom-radius(@radius) {
	border-bottom-right-radius: @radius;
	border-bottom-left-radius: @radius;
}
.border-left-radius(@radius) {
	border-bottom-left-radius: @radius;
	border-top-left-radius: @radius;
}

// Animations
.animation(@animation) {
	-webkit-animation: @animation;
	animation: @animation;
}

.animation-name(@name) {
	-webkit-animation-name: @name;
	animation-name: @name;
}

.animation-duration(@duration) {
	-webkit-animation-duration: @duration;
	animation-duration: @duration;
}

.animation-timing-function(@timing-function) {
	-webkit-animation-timing-function: @timing-function;
	animation-timing-function: @timing-function;
}

.animation-delay(@delay) {
	-webkit-animation-delay: @delay;
	animation-delay: @delay;
}

.animation-iteration-count(@iteration-count) {
	-webkit-animation-iteration-count: @iteration-count;
	animation-iteration-count: @iteration-count;
}

.animation-direction(@direction) {
	-webkit-animation-direction: @direction;
	animation-direction: @direction;
}

.animation-fill-mode(@fill-mode) {
	-webkit-animation-fill-mode: @fill-mode;
	animation-fill-mode: @fill-mode;
}

// Transformations
.scale(@ratio) {
	-webkit-transform: scale(@ratio);
	-ms-transform: scale(@ratio); // IE9 only
	transform: scale(@ratio);
}

.scale(@ratioX; @ratioY) {
	-webkit-transform: scale(@ratioX, @ratioY);
	-ms-transform: scale(@ratioX, @ratioY); // IE9 only
	transform: scale(@ratioX, @ratioY);
}

.scaleX(@ratio) {
	-webkit-transform: scaleX(@ratio);
	-ms-transform: scaleX(@ratio); // IE9 only
	transform: scaleX(@ratio);
}

.scaleY(@ratio) {
	-webkit-transform: scaleY(@ratio);
	-ms-transform: scaleY(@ratio); // IE9 only
	transform: scaleY(@ratio);
}

.skew(@x; @y) {
	-webkit-transform: skewX(@x) skewY(@y);
	-ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
	transform: skewX(@x) skewY(@y);
}

.translate(@x; @y) {
	-webkit-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y); // IE9 only
	transform: translate(@x, @y);
}

.translate3d(@x; @y; @z) {
	-webkit-transform: translate3d(@x, @y, @z);
	transform: translate3d(@x, @y, @z);
}

.rotate(@degrees) {
	-webkit-transform: rotate(@degrees);
	-ms-transform: rotate(@degrees); // IE9 only
	transform: rotate(@degrees);
}

.rotateX(@degrees) {
	-webkit-transform: rotateX(@degrees);
	-ms-transform: rotateX(@degrees); // IE9 only
	-o-transform: rotateX(@degrees);
	transform: rotateX(@degrees);
}

.rotateY(@degrees) {
	-webkit-transform: rotateY(@degrees);
	-ms-transform: rotateY(@degrees); // IE9 only
	-o-transform: rotateY(@degrees);
	transform: rotateY(@degrees);
}

.transform-origin(@origin) {
	-webkit-transform-origin: @origin;
	-ms-transform-origin: @origin; // IE9 only
	transform-origin: @origin;
}


.perspective(@perspective) {
	-webkit-perspective: @perspective;
	perspective: @perspective;
}

.perspective-origin(@perspective) {
	-webkit-perspective-origin: @perspective;
	perspective-origin: @perspective;
}

// Transitions
.transition(@transition) {
	-webkit-transition: @transition;
	transition: @transition;
}

.transition-property(@transition-property) {
	-webkit-transition-property: @transition-property;
	transition-property: @transition-property;
}

.transition-delay(@transition-delay) {
	-webkit-transition-delay: @transition-delay;
	transition-delay: @transition-delay;
}

.transition-duration(@transition-duration) {
	-webkit-transition-duration: @transition-duration;
	transition-duration: @transition-duration;
}

.transition-timing-function(@timing-function) {
	-webkit-transition-timing-function: @timing-function;
	transition-timing-function: @timing-function;
}

.transition-transform(@transition) {
	-webkit-transition: -webkit-transform @transition;
	transition: transform @transition;
}